@{
    Layout = "_Layout";
    var typeSeconds = JsonSerializer.Deserialize<int[]>(Model.TypedSeconds);
    var consistency = (int)(((double)typeSeconds.Min() / typeSeconds.Max()) * 100);
    ViewData["Title"] = "Results - KeyFlex";
}
@model Result;
@using System.Text.Json;
@using ShiftType.DbModels;
@section scripts{

}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/canvasjs/1.7.0/canvasjs.min.js" integrity="sha512-FJ2OYvUIXUqCcPf1stu+oTBlhn54W0UisZB/TNrZaVMHHhYvLBV9jMbvJYtvDe5x/WVaoXZ6KB+Uqe5hT2vlyA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<main style="height:100%" class="">
    <div class="page pageTest active" style="opacity: 1;">
        <div id="result" class="" tabindex="-1" style="opacity: 1;">
            <div class="stats">
                <div class="group wpm">
                    <div class="top">
                        <div class="text">wpm</div>
                        <div class="crown hidden" aria-label="" data-balloon-pos="up" style="opacity: 0;">
                            <i class="fas fa-crown"></i>
                        </div>
                    </div>
                    <div class="bottom" aria-label="106.38 wpm" data-balloon-pos="up">@Model.Wpm</div>
                </div>
                <div class="group acc">
                    <div class="top">acc</div>
                    <div class="bottom" aria-label="97.14% (@(Model.TypedText.Length-Model.Errors) correct / @Model.Errors incorrect)" data-balloon-pos="up">@(Model.Accuracy)%</div>
                </div>
            </div>
            <div class="stats morestats">
                <div class="group testType">
                    <div class="top">test type</div>
                    <div class="bottom">@((ShiftType.Models.TestTypes)Model.TestType) <br>@Model.Language</div>
                    <div class="tags hidden" style="margin-top:.5rem">
                        <div class="top">
                            tags<div class="textButton editTagsButton" result-id="656b5f887275ef81404b05e0"
                                     active-tag-ids="" aria-label="Edit tags" role="button" data-balloon-pos="right">
                                <i class="fas fa-pen fa-fw"></i>
                            </div>
                        </div>
                        <div class="bottom">
                            <div class="noTags">no tags</div>
                        </div>
                    </div>
                </div>
                <div class="group info hidden">
                    <div class="top">other</div>
                    <div class="bottom">-</div>
                </div>
                <div class="group raw">
                    <div class="top">raw</div>
                    <div class="bottom" aria-label="110.37 wpm" data-balloon-pos="up">@(Model.Wpm+Model.Errors)</div>
                </div>
                <div class="group key">
                    <div class="top">characters</div>
                    <div class="bottom" aria-label="correct, incorrect, extra, and missed" data-balloon-break=""
                         data-balloon-pos="up">
                        @(Model.TypedText.Length - Model.Errors)/@Model.Errors/0/0
                    </div>
                </div>
                <div class="group flat consistency">
                    <div class="top">consistency</div>
                    <div class="bottom" aria-label="77.64% (25.99% key)" data-balloon-pos="up">@(consistency)%</div>
                </div>
                <div class="group time">
                    <div class="top">time</div>
                    <div class="bottom" aria-label="15s (0s afk 0%)" data-balloon-pos="up">
                        <div class="text">@Model.TimeSpent s</div>
                        <div class="afk"></div>
                    </div>
                </div>
                <div class="group dailyLeaderboard hidden">
                    <div class="top">daily leaderboard</div>
                    <div class="bottom">-</div>
                </div>
                <div class="group source hidden">
                    <div class="top">
                        source <span id="reportQuoteButton" class="textButton" aria-label="Report quote"
                                     data-balloon-pos="up" style="display:inline-block">
                            <i class="icon fas fa-flag"></i>
                        </span><span id="favoriteQuoteButton" class="textButton hidden" aria-label="Favorite quote"
                                     data-balloon-pos="up" style="display:inline-block">
                            <i class="icon far fa-heart"></i>
                        </span><span id="rateQuoteButton" class="textButton hidden" aria-label="Rate quote"
                                     data-balloon-pos="up"><i class="icon far fa-star"></i> <span class="rating"></span></span>
                    </div>
                    <div class="bottom">-</div>
                </div>
            </div>
            <div class="chart">
                <canvas id="wpmChart"
                        style="display: block; box-sizing: border-box; height: 200px; width: 500px;" height="250"
                        width="625"></canvas>
            </div>
            <div class="bottom" style="grid-column:1/3">
                <div id="resultWordsHistory" class="hidden">
                </div>
                <div id="resultReplay" class="hidden">
                    <div class="title">
                        watch replay <span id="playpauseReplayButton" class="textButton"
                                           aria-label="Resume replay" data-balloon-pos="up" style="display:inline-block">
                            <i class="fas fa-play"></i>
                        </span>
                        <p id="replayStats"></p>
                    </div>
                    <div id="wordsWrapper">
                        <div id="replayWords" class="words"></div>
                    </div>
                </div><button id="retrySavingResultButton" class="danger hidden" onclick="this.blur()">
                    <i class="fas fa-redo"></i> Retry saving result
                </button>
                <div class="buttons">
                    <button class="text" id="nextTestButton" aria-label="Next test" role="button"
                            data-balloon-pos="down" onclick="this.blur()">
                        <i class="fas fa-fw fa-chevron-right"></i>
                    </button> <button class="text"
                                      id="restartTestButtonWithSameWordset" aria-label="Repeat test" role="button"
                                      data-balloon-pos="down" onclick="this.blur()">
                        <i class="fas fa-fw fa-sync-alt"></i>
                    </button>
                    <button class="text" id="copyWords" aria-label="Practice words" role="button"
                            data-balloon-pos="down" onclick="this.blur()">
                        <i class="fas fa-fw fa-copy"></i>
                    </button> <button class="text"
                                      id="showWordHistoryButton" aria-label="Toggle words history" role="button"
                                      data-balloon-pos="down" onclick="this.blur()">
                        <i class="fas fa-fw fa-align-left"></i>
                    </button>
                    <button class="text" id="watchReplayButton" aria-label="Watch replay" role="button"
                            data-balloon-pos="down" onclick="this.blur()">
                        <i class="fas fa-fw fa-backward"></i>
                    </button>
                    <button class="text" id="saveScreenshotButton" aria-label="Copy screenshot to clipboard"
                            role="button" data-balloon-pos="down" onclick="this.blur()">
                        <i class="far fa-fw fa-image"></i>
                    </button>
                </div>
            </div>
            <div class="loginTip hidden"><a href="/login" router-link="">Sign in</a> to save your result</div>
            <div style="grid-column:span 2">
                <div id="ad-result-wrapper" class="ad advertisement ad-h" style="display: none !important;">
                    <div class="iconAndText">
                        <div class="icon"><i class="fas fa-ad"></i></div>
                        <div class="text textRight"></div>
                    </div>
                    <div id="ad-result"></div>
                </div>
                <div id="ad-result-small-wrapper" class="ad advertisement ad-h-s" style="display: none !important;">
                    <div class="icon small"><i class="fas fa-ad"></i></div>
                    <div id="ad-result-small"></div>
                </div>
            </div>
            <div class="ssWatermark hidden">monkeytype.com</div>
        </div>
        <div></div>
    </div>
</main>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>

<script>
    var ctx = document.getElementById('wpmChart').getContext('2d');
    var jsonTypedSeconds = JSON.parse(`@Html.Raw(Model.TypedSeconds)`);
    let labels = [];
    for(let i = 0;i<jsonTypedSeconds.length;i++)
    {
        labels.push(i+1);
    }
    console.log(jsonTypedSeconds);
    console.log(labels);
    var chartData = {
        labels: labels,
        datasets: [{
            label: 'wpm',
            backgroundColor: '#191919', 
            borderColor: ' #007acc', 
            borderWidth: 1,
            data: jsonTypedSeconds, 
        }]
    };

    var chartOptions = {
        responsive: true, 
        maintainAspectRatio: false,
        scales: {
            y: {
                beginAtZero: true 
            }
        }
    };

    var myChart = new Chart(ctx, {
        type: 'line',
        data: chartData,
        options: chartOptions
    });

    document.addEventListener('keydown', (event) => {
        if (event.key === 'Escape') {
            window.location.href = "https://localhost:7228/";
        }
    });
    document.getElementById("nextTestButton").addEventListener("click",function(){
         window.location.href = "https://localhost:7228/";
    });

    document.getElementById("copyWords").addEventListener("click",function(){
    var typedText = `@Html.Raw(Model.TypedText)`;
    console.log(typedText);
    navigator.clipboard.writeText(typedText)
    });
    document.getElementById("saveScreenshotButton").addEventListener("click", function () {
        const elementToCapture = document.getElementById('result'); 

        html2canvas(elementToCapture).then(canvas => {
            const dataURL = canvas.toDataURL('image/png');
            const link = document.createElement('a');
            link.href = dataURL;
            link.download = 'result.png';
            link.click();
        });
    })
</script>